{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/pages/checkout.component.css","webpack:///./src/app/pages/checkout.component.html","webpack:///./src/app/pages/checkout.component.ts","webpack:///./src/app/pages/loginPage.component.html","webpack:///./src/app/pages/loginPage.component.ts","webpack:///./src/app/pages/shopPage.component.html","webpack:///./src/app/pages/shopPage.component.ts","webpack:///./src/app/router/index.ts","webpack:///./src/app/services/authActivator.service.ts","webpack:///./src/app/services/store.services.ts","webpack:///./src/app/shared/Order.ts","webpack:///./src/app/shared/dataService.ts","webpack:///./src/app/views/cartView.component.html","webpack:///./src/app/views/cartView.component.ts","webpack:///./src/app/views/cartview.component.css","webpack:///./src/app/views/productListView.component.css","webpack:///./src/app/views/productListView.component.html","webpack:///./src/app/views/productListView.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <h1>\\r\\n            {{title}}\\r\\n        </h1>\\r\\n        <router-outlet></router-outlet>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: \"app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n    title = 'Daily Techoffee';\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppComponent } from './app.component';\nimport { Store } from './services/store.services';\r\nimport  ProductListView  from './views/productListView.component';\nimport { CartView } from './views/cartView.component';\r\nimport router from './router';\r\nimport { ShopPage } from './pages/shopPage.component';\r\nimport { CheckoutPage } from './pages/checkout.component';\r\nimport { DataService } from './shared/dataService';\r\nimport { LoginPage } from './pages/loginPage.component';\r\nimport { AuthActivator } from './services/authActivator.service';\r\nimport { FormsModule } from '@angular/forms';\r\n\n@NgModule({\n  declarations: [\n        AppComponent,\n        ProductListView,\n        CartView,\n        ShopPage,\n        CheckoutPage,\n        LoginPage\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule,\n      router,\n      FormsModule\n    ],\n    providers: [Store, AuthActivator, DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n ","module.exports = \".checkout-thumb {\\n  max-width: 100px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvY2hlY2tvdXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtDQUNsQiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoZWNrb3V0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hlY2tvdXQtdGh1bWIge1xuICBtYXgtd2lkdGg6IDEwMHB4O1xufVxuIl19 */\"","module.exports = \"<div class=\\\"row\\\">\\n  <h3>Confirm Order</h3>\\n  <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\">{{ errorMessage }}</div>\\n  <table class=\\\"table table-bordered table-hover\\\">\\n    <tr *ngFor=\\\"let o of store.order.items\\\">\\n      <td><img src=\\\"/images/{{ o.productArtId }}.jpg\\\" alt=\\\"o.productTitle\\\" class=\\\"img-thumbnail checkout-thumb\\\" /></td>\\n      <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\\n      <td>{{ o.quantity }}</td>\\n      <td>{{ o.unitPrice|currency:'USD':true }}</td>\\n      <td>{{ (o.unitPrice * o.quantity)|currency:'USD':true }}</td>\\n    </tr>\\n  </table>\\n  <div class=\\\"col-md-4 col-md-offset-8 text-right\\\">\\n    <table class=\\\"table table-condensed\\\">\\n      <tr>\\n        <td class=\\\"text-right\\\">Subtotal</td>\\n        <td class=\\\"text-right\\\">{{ store.order.subTotal|currency:'USD':true }}</td>\\n      </tr>\\n      <tr>\\n        <td class=\\\"text-right\\\">Shipping</td>\\n        <td class=\\\"text-right\\\">$ 0.00</td>\\n      </tr>\\n      <tr>\\n        <td class=\\\"text-right\\\">Total:</td>\\n        <td class=\\\"text-right\\\">{{ store.order.subTotal|currency:'USD':true }}</td>\\n      </tr>\\n    </table>\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"onCheckout()\\\">Complete Purchase</button>\\n    <a routerLink=\\\"/\\\" class=\\\"btn btn-info\\\">Cancel</a>\\n  </div>\\n\\n</div>\"","﻿import { Component } from \"@angular/core\";\nimport { DataService } from '../shared/dataService';\nimport { Store } from \"../services/store.services\";\r\nimport { Router } from \"@angular/router\";\r\n\n@Component({\n    selector: \"checkout\",\n    templateUrl: \"checkout.component.html\",\n    styleUrls: ['checkout.component.css']\n})\nexport class CheckoutPage {\n\n    public errorMessage = \"\";\n\n    constructor(public store: Store, private router: Router) {\n    }\n\n\n    onCheckout() {\n        this.errorMessage = \"\";\n\n        this.store.checkout()\n            .subscribe(() => {\n                this.router.navigate([\"/\"])\n            }, err => {\n                this.errorMessage = `Failed to checkout: ${err}`;\r\n            }\n\n        )\n    }\n}","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4 col-md-offset-4\\\">\\n      <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\">{{ errorMessage }}</div>\\n    <form (submit)=\\\"onLogin()\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" [(ngModel)]=\\\"creds.username\\\" required/>\\n          <div class=\\\"text-danger\\\" *ngIf=\\\"username.touched && username.invalid && username.errors.required\\\">Required</div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"creds.password\\\" required />\\n          <div class=\\\"text-danger\\\" *ngIf=\\\"password.touched && password.invalid && password.errors.required\\\">Required</div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Login\\\" [disabled]=\\\"username.invalid || password.invalid\\\" />\\n        <a href=\\\"#\\\" class=\\\"btn btn-default\\\">Cancel</a>\\n      </div>\\n    </form>\\n      {{ creds | json }}\\n  </div>\\n</div>\"","﻿\r\nimport { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Store } from \"../services/store.services\";\r\nimport { LoginRequest } from \"../shared/LoginResults\";\r\n\r\n@Component({\r\n    selector: \"login-page\",\r\n    templateUrl: \"loginPage.component.html\"\r\n})\r\nexport class LoginPage {\r\n    constructor(private store: Store, private router: Router) {\r\n\r\n       \r\n    }\r\n\r\n    public creds: LoginRequest = {\r\n        username: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    public errorMessage = \"\";\r\n\r\n    onLogin() {\r\n        this.store.login(this.creds)\r\n            .subscribe(() => {\r\n                // Success\r\n                if (this.store.order.items.length > 0) {\r\n                    this.router.navigate([\"checkout\"]);\r\n                }\r\n                else {\r\n                    this.router.navigate([\"\"]);\r\n                }\r\n            }, error => {\r\n                console.log(error);\r\n                this.errorMessage = \"Failed to login\";\r\n            });\r\n    }\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-9\\\">\\r\\n        <h1>\\r\\n            {{title}}\\r\\n        </h1>\\r\\n        <product-list></product-list>\\r\\n    </div>\\r\\n    <div class=\\\"col-3\\\">\\r\\n        <cart></cart>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"shop-page\",\r\n    templateUrl: \"shopPage.component.html\"\r\n})\r\nexport class ShopPage {\r\n\r\n}","﻿import { RouterModule } from \"@angular/router\";\r\nimport { CheckoutPage } from \"../pages/checkout.component\";\r\nimport { LoginPage } from \"../pages/loginPage.component\";\r\nimport { ShopPage } from \"../pages/shopPage.component\";\r\nimport { AuthActivator } from \"../services/authActivator.service\";\r\n\r\nconst routes = [\r\n    { path: \"\", component: ShopPage },\r\n    { path: \"checkout\", component: CheckoutPage, canActivate: [AuthActivator] },\r\n    { path: \"login\", component: LoginPage },\r\n    { path: \"**\", redirectTo: \"/\" }\r\n]\r\n\r\nconst router = RouterModule.forRoot(routes, { useHash: false });\r\n\r\nexport default router;","﻿import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Store } from \"./store.services\";\r\n\r\n@Injectable()\r\nexport class AuthActivator implements CanActivate {\r\n\r\n    constructor(private store: Store, private router: Router) {\r\n\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\r\n        : boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n\r\n        if (this.store.loginRequired) {\r\n            this.router.navigate([\"login\"])\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n}","﻿import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nimport { Product } from \"../shared/Product\";\r\nimport { Order } from \"../shared/Order\";\r\nimport { OrderItem } from \"../shared/Order\";\r\nimport { LoginRequest, LoginResults } from \"../shared/LoginResults\";\r\n\r\n\r\n@Injectable()\r\nexport class Store {\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    public products: Product[] = [];\r\n    public order: Order = new Order();\r\n    public token = \"\";\r\n    public expiration = new Date();\r\n\r\n    loadProducts(): Observable<void> {\r\n\r\n        //pipe - before running code, it does specific function\r\n        //map - turns json to objects\r\n        return this.http.get<[]>(\"/api/products\")\r\n            .pipe(map(data => {\r\n                this.products = data;\r\n                return;\r\n            }));\r\n    }\r\n\r\n    get loginRequired(): boolean {\r\n        return this.token.length === 0 || this.expiration < new Date();\r\n    }\r\n\r\n    login(creds: LoginRequest) {\r\n        return this.http.post<LoginResults>(\"/account/createtoken\", creds)\r\n            .pipe(map(data => {\r\n                this.token = data.token;\r\n                this.expiration = data.expiration;\r\n            }));\r\n    }\r\n\r\n    checkout() {\r\n        const headers = new HttpHeaders().set(\"Authorization\", `Bearer ${this.token}`)\r\n\r\n\r\n        return this.http.post(\"/api/orders\", this.order, {\r\n            headers: headers\r\n        })\r\n            .pipe(map(() => {\r\n                this.order = new Order();\r\n            }));\r\n    }\r\n\r\n    addToOrder(product: Product) {\r\n        let item = new OrderItem();\r\n\r\n        item = this.order.items.find(o => o.productId === product.id);\r\n\r\n        if (item) {\r\n            item.quantity++;\r\n        } else {\r\n            item = new OrderItem();\r\n            item.productId = product.id;\r\n            item.productTitle = product.title;\r\n            item.productArtId = product.artId;\r\n            item.productArtist = product.artist;\r\n            item.productCategory = product.category;\r\n            item.productSize = product.size;\r\n            item.unitPrice = product.price;\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n\r\n}","﻿import * as _ from \"lodash\";\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string = Math.random().toString(36).substr(2,5);\r\n    items: OrderItem[] = [];\r\n\r\n    get subTotal(): number {\r\n\r\n        const result = this.items.reduce(\r\n            (tot, val) => {\r\n                return tot + (val.unitPrice * val.quantity);\r\n        }, 0);\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productPrice: number;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    orderOrderDate: Date;\r\n    productArtId: string;\r\n}\r\n","﻿import { HttpClient, HttpResponse, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\"\r\nimport { map } from 'rxjs/operators';\r\nimport { Product } from \"./Product\";\r\nimport { Order, OrderItem } from \"./Order\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  private token: string = \"\";\r\n  private tokenExpiration: Date = new Date();\r\n\r\n  public order: Order = new Order();\r\n\r\n  public products: Product[] = [];\r\n\r\n  loadProducts(): Observable<boolean> {\r\n    return this.http.get(\"/api/products\")\r\n      .pipe(\r\n        map((data: any[]) => {\r\n          this.products = data;\r\n          return true;\r\n        }));\r\n}\r\n\r\n  public get loginRequired(): boolean {\r\n    return this.token.length == 0 || this.tokenExpiration > new Date();\r\n  }\r\n\r\n  public login(creds) {\r\n    return this.http.post(\"/account/createtoken\", creds)\r\n      .pipe(\r\n        map((response: any) => {\r\n          let tokenInfo = response;\r\n          this.token = tokenInfo.token;\r\n          this.tokenExpiration = tokenInfo.expiration;\r\n          return true;\r\n        }));\r\n  }\r\n\r\n  public checkout() {\r\n    if (!this.order.orderNumber) {\r\n      this.order.orderNumber = this.order.orderDate.getFullYear().toString() + this.order.orderDate.getTime().toString();\r\n    }\r\n\r\n    return this.http.post(\"/api/orders\", this.order, {\r\n      headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token })\r\n    })\r\n      .pipe(\r\n        map(response => {\r\n          this.order = new Order();\r\n          return true;\r\n        }));\r\n  }\r\n\r\n  public AddToOrder(product: Product) {\r\n\r\n    let item: OrderItem = this.order.items.find(i => i.productId == product.id);\r\n\r\n    if (item) {\r\n\r\n      item.quantity++;\r\n\r\n    } else {\r\n\r\n      item = new OrderItem();\r\n      item.productId = product.id;\r\n      item.productArtist = product.artist;\r\n      item.productCategory = product.category;\r\n      item.productArtId = product.artId;\r\n      item.productTitle = product.title;\r\n      item.productSize = product.size;\r\n      item.unitPrice = product.price;\r\n      item.quantity = 1;\r\n\r\n      this.order.items.push(item);\r\n    }\r\n  }\r\n\r\n\r\n}","module.exports = \"<h3>Cart</h3>\\r\\n<div>Count: {{ store.order.items.length }}</div>\\r\\n<table class=\\\"table table-condensed table-striped\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th></th>\\r\\n            <th>Product</th>\\r\\n            <th>Quantity</th>\\r\\n            <th>Price</th>\\r\\n            <th>Total</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of store.order.items\\\">\\r\\n            <td>\\r\\n                <img src=\\\"/images/{{ item.productArtId }}.jpg\\\" alt=\\\"{{ item.productArtist }}\\\" class=\\\"img-fluid product-thumb\\\" />\\r\\n            </td>\\r\\n            <td>{{ item.productCategory }}</td>\\r\\n            <td>{{ item.quantity }}</td>\\r\\n            <td>{{ item.unitPrice | currency }}</td>\\r\\n            <td>{{ item.unitPrice *  item.quantity | currency}}</td>\\r\\n\\r\\n        </tr>\\r\\n    </tbody>\\r\\n    <tfoot>\\r\\n        <tr>\\r\\n            <td colspan=\\\"5\\\">\\r\\n                <strong>\\r\\n                    Subtotal: {{ store.order.subTotal | currency }}\\r\\n                </strong>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tfoot>\\r\\n</table>\\r\\n<a class=\\\"btn btn-success\\\" *ngIf=\\\"store.order.items.length > 0\\\" routerLink=\\\"checkout\\\">Checkout</a>\\r\\n<hr/>\"","﻿import { Component } from \"@angular/core\";\r\nimport { Store } from \"../services/store.services\";\r\n\r\n@Component({\r\n    selector: \"cart\",\r\n    templateUrl: \"cartView.component.html\",\r\n    styleUrls: [\"cartview.component.css\"]\r\n})\r\n\r\nexport class CartView {\r\n    constructor(public store: Store) {\r\n\r\n    }\r\n}","module.exports = \".product-thumb{\\r\\n    max-width: 50px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvY2FydHZpZXcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtDQUNuQiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NhcnR2aWV3LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucHJvZHVjdC10aHVtYntcclxuICAgIG1heC13aWR0aDogNTBweDtcclxufSJdfQ== */\"","module.exports = \".product-image{\\r\\n    border: 1px #ddd solid;\\r\\n    box-shadow: rgba(0,0,0,.4) 2px 2px;\\r\\n    margin: 2px;\\r\\n}\\r\\n\\r\\n.products-props{\\r\\n    font-size: .9rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvcHJvZHVjdExpc3RWaWV3LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx1QkFBdUI7SUFDdkIsbUNBQW1DO0lBQ25DLFlBQVk7Q0FDZjs7QUFFRDtJQUNJLGlCQUFpQjtDQUNwQiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Byb2R1Y3RMaXN0Vmlldy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnByb2R1Y3QtaW1hZ2V7XHJcbiAgICBib3JkZXI6IDFweCAjZGRkIHNvbGlkO1xyXG4gICAgYm94LXNoYWRvdzogcmdiYSgwLDAsMCwuNCkgMnB4IDJweDtcclxuICAgIG1hcmdpbjogMnB4O1xyXG59XHJcblxyXG4ucHJvZHVjdHMtcHJvcHN7XHJcbiAgICBmb250LXNpemU6IC45cmVtO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let p of store.products\\\" class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"border bg-light rounded p-1\\\">\\r\\n                <img src=\\\"/images/{{ p.artId }}.jpg\\\" class=\\\"img-fluid product-image\\\" alt=\\\"{{ p.artist }} \\\" />\\r\\n                <h5> {{ p.category }} - {{ p.size }}</h5>\\r\\n                <ul class=\\\"products-props\\\">\\r\\n                    <li>Price: {{ p.price | currency }} </li>\\r\\n                    <li>Artist: {{ p.artist }}</li>\\r\\n                    <li>Title: {{ p.title }}</li>\\r\\n                    <li>{{ p.artDescription }}</li>\\r\\n                </ul>\\r\\n                <button id=\\\"buyButton\\\" class=\\\"btn btn-success\\\" (click)=\\\"store.addToOrder(p)\\\">Buy</button>\\r\\n            </div>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"../services/store.services\";\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productListView.component.html\",\r\n    styleUrls: [\"productListView.component.css\"]\r\n})\r\nexport default class ProductListView implements OnInit {\r\n\r\n\r\n    constructor(public store: Store) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.store.loadProducts()\r\n            .subscribe(); //Kicks off the operation\r\n    }\r\n\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}